/*******************************************************************************
* File:       CalculatorDisplay.java
* Programmer: Uriel Salazar
* Date:       April 5, 2017
* Course:     CSC-18B
* Purpose:    Displays the calculator GUI
*******************************************************************************/

//package class
package guicalculator;

//import packages
import com.sun.glass.events.KeyEvent;
import java.awt.Dimension;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.io.Serializable;
import javax.swing.JOptionPane;

//declare class
public class CalculatorDisplay extends javax.swing.JFrame
        implements Serializable
{
    //declare variables
    double num1, num2;
    double answer;
    String operations;
    String savedCalculation = "0";
    
    
    //declare objects
    private Object math;
    Dimension basic = new Dimension(231, 308);
    Dimension scientific = new Dimension(470, 308);
    

    //constructor
    public CalculatorDisplay()
    {
        /**
         * call method "initComponents"
         * initializes GUI form components
         */
        initComponents();
        
        //call method
        //inputFile();
    }
    
    //method
    public void OutputToFile()
    {
        //instantiate object
        Export savedResult = new Export(savedCalculation);
        
        //write to file
        try
        {
            writeToFile(savedResult);
        }
        catch(IOException e)
        {
            System.out.println(e.getMessage());
        }
    }
    
     //method
    public void inputFile()
    {
        //read file
        try
        {
            readFile();
        }
        catch(IOException | ClassNotFoundException e)
        {
            System.out.println(e.getMessage());
        }
    }
    
    
    
    //method
    public static void writeToFile(Export export) throws IOException
    {
        ObjectOutputStream outStream = new ObjectOutputStream(
                new FileOutputStream("export.bin"));
        outStream.writeObject(export);
        
        //output message
        JOptionPane.showMessageDialog(null, "Binary File Created!",
                "Export", JOptionPane.INFORMATION_MESSAGE);
    }
    
    //method
    public static void readFile() throws IOException, ClassNotFoundException
    {
        ObjectInputStream inStream = new ObjectInputStream(
                new FileInputStream("export.bin"));
        Export file = (Export) inStream.readObject();
        
        //output message
        JOptionPane.showMessageDialog(null, file,
                "Read", JOptionPane.INFORMATION_MESSAGE);
    }
    
    //method factorial
    public static BigInteger factorial(BigInteger n)
    {
        BigInteger factorial = BigInteger.valueOf(1);
        
        for(int i = 1; i <= n.intValue(); i++)
        {
            factorial = factorial.multiply(BigInteger.valueOf(i));
        }
        return factorial;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InputOutputTextField = new javax.swing.JTextField();
        Button7 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        ButtonDivide = new javax.swing.JButton();
        ButtonMemoryStore = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        ButtonMultiply = new javax.swing.JButton();
        ButtonMemoryClear = new javax.swing.JButton();
        Button1 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        ButtonAddition = new javax.swing.JButton();
        ButtonMemoryRecall = new javax.swing.JButton();
        ButtonClear = new javax.swing.JButton();
        Button0 = new javax.swing.JButton();
        ButtonDecimal = new javax.swing.JButton();
        ButtonSubtraction = new javax.swing.JButton();
        ButtonPlusMinus = new javax.swing.JButton();
        ButtonSquare = new javax.swing.JButton();
        ButtonSine = new javax.swing.JButton();
        ButtonLog = new javax.swing.JButton();
        ButtonHyperSine = new javax.swing.JButton();
        ButtonExponential = new javax.swing.JButton();
        ButtonCosine = new javax.swing.JButton();
        ButtonNaturalLog = new javax.swing.JButton();
        ButtonHyperCosine = new javax.swing.JButton();
        ButtonFactorial = new javax.swing.JButton();
        ButtonTangent = new javax.swing.JButton();
        ButtonSquareRoot = new javax.swing.JButton();
        ButtonHyperTangent = new javax.swing.JButton();
        ButtonE = new javax.swing.JButton();
        ButtonCubeRoot = new javax.swing.JButton();
        ButtonPi = new javax.swing.JButton();
        ButtonBackspace = new javax.swing.JButton();
        ButtonEquals = new javax.swing.JButton();
        ButtonPercent = new javax.swing.JButton();
        CalculatorMenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        ButtonExport = new javax.swing.JMenuItem();
        ButtonRead = new javax.swing.JMenuItem();
        ViewMenu = new javax.swing.JMenu();
        ButtonBasic = new javax.swing.JMenuItem();
        ButtonScientific = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(528, 240));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        InputOutputTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        InputOutputTextField.setToolTipText("Input numeric value");
        InputOutputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputOutputTextFieldActionPerformed(evt);
            }
        });
        InputOutputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InputOutputTextFieldKeyTyped(evt);
            }
        });

        Button7.setLabel("7");
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });
        Button7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Button7KeyPressed(evt);
            }
        });

        Button8.setText("8");
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });

        Button9.setText("9");
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });

        ButtonDivide.setText("/");
        ButtonDivide.setPreferredSize(new java.awt.Dimension(40, 32));
        ButtonDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDivideActionPerformed(evt);
            }
        });

        ButtonMemoryStore.setText("Ms");
        ButtonMemoryStore.setToolTipText("Memory Store");

        Button4.setText("4");
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        Button5.setText("5");
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });

        Button6.setText("6");
        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });

        ButtonMultiply.setText("*");
        ButtonMultiply.setPreferredSize(new java.awt.Dimension(40, 32));
        ButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMultiplyActionPerformed(evt);
            }
        });

        ButtonMemoryClear.setText("Mc");
        ButtonMemoryClear.setToolTipText("Memory Clear");

        Button1.setText("1");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Button2.setText("2");
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        Button3.setText("3");
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        ButtonAddition.setText("+");
        ButtonAddition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAdditionActionPerformed(evt);
            }
        });

        ButtonMemoryRecall.setText("M");
        ButtonMemoryRecall.setToolTipText("Get Value From Memory");
        ButtonMemoryRecall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMemoryRecallActionPerformed(evt);
            }
        });

        ButtonClear.setText("C");
        ButtonClear.setEnabled(false);
        ButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClearActionPerformed(evt);
            }
        });

        Button0.setText("0");
        Button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button0ActionPerformed(evt);
            }
        });

        ButtonDecimal.setText(".");
        ButtonDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDecimalActionPerformed(evt);
            }
        });

        ButtonSubtraction.setText("-");
        ButtonSubtraction.setPreferredSize(new java.awt.Dimension(40, 32));
        ButtonSubtraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSubtractionActionPerformed(evt);
            }
        });

        ButtonPlusMinus.setText("<html>&plusmn;</html>");
        ButtonPlusMinus.setToolTipText("Convert positive or negative");
        ButtonPlusMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPlusMinusActionPerformed(evt);
            }
        });

        ButtonSquare.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonSquare.setText("<html>x<sup>2</html>");
        ButtonSquare.setToolTipText("Square");
        ButtonSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSquareActionPerformed(evt);
            }
        });

        ButtonSine.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonSine.setText("sin");
        ButtonSine.setToolTipText("Sine");
        ButtonSine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSineActionPerformed(evt);
            }
        });

        ButtonLog.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonLog.setText("log");
        ButtonLog.setToolTipText("Logarithm");
        ButtonLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLogActionPerformed(evt);
            }
        });

        ButtonHyperSine.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonHyperSine.setText("sinh");
        ButtonHyperSine.setToolTipText("Hyperbolic Sine");
        ButtonHyperSine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonHyperSineActionPerformed(evt);
            }
        });

        ButtonExponential.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonExponential.setText("<html>x<sup>y</html>");
        ButtonExponential.setToolTipText("Exponential");
        ButtonExponential.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExponentialActionPerformed(evt);
            }
        });

        ButtonCosine.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonCosine.setText("cos");
        ButtonCosine.setToolTipText("Cosine");
        ButtonCosine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCosineActionPerformed(evt);
            }
        });

        ButtonNaturalLog.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonNaturalLog.setText("ln");
        ButtonNaturalLog.setToolTipText("Natural Logarithm");
        ButtonNaturalLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNaturalLogActionPerformed(evt);
            }
        });

        ButtonHyperCosine.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonHyperCosine.setText("cosh");
        ButtonHyperCosine.setToolTipText("Hyperbolic Cosine");
        ButtonHyperCosine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonHyperCosineActionPerformed(evt);
            }
        });

        ButtonFactorial.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonFactorial.setText("x!");
        ButtonFactorial.setToolTipText("Factorial");
        ButtonFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonFactorialActionPerformed(evt);
            }
        });

        ButtonTangent.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonTangent.setText("tan");
        ButtonTangent.setToolTipText("Tangent");
        ButtonTangent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTangentActionPerformed(evt);
            }
        });

        ButtonSquareRoot.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonSquareRoot.setText("<html>&radic;x");
        ButtonSquareRoot.setToolTipText("Square Root");
        ButtonSquareRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSquareRootActionPerformed(evt);
            }
        });

        ButtonHyperTangent.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonHyperTangent.setText("tanh");
        ButtonHyperTangent.setToolTipText("Hyperbolic Tangent");
        ButtonHyperTangent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonHyperTangentActionPerformed(evt);
            }
        });

        ButtonE.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonE.setText("e");
        ButtonE.setToolTipText("Mathematical constant");
        ButtonE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEActionPerformed(evt);
            }
        });

        ButtonCubeRoot.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonCubeRoot.setText("<html><span>&#8731;x</span></html>");
        ButtonCubeRoot.setToolTipText("Cube Root");
        ButtonCubeRoot.setPreferredSize(new java.awt.Dimension(57, 32));
        ButtonCubeRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCubeRootActionPerformed(evt);
            }
        });

        ButtonPi.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        ButtonPi.setText("<html>&pi;</html>");
        ButtonPi.setToolTipText("Mathematical constant");
        ButtonPi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPiActionPerformed(evt);
            }
        });

        ButtonBackspace.setText("<html>&larr;</html>");
        ButtonBackspace.setToolTipText("Backspace");
        ButtonBackspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackspaceActionPerformed(evt);
            }
        });

        ButtonEquals.setText("=");
        ButtonEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEqualsActionPerformed(evt);
            }
        });

        ButtonPercent.setText("<html>&#37;</html>");
        ButtonPercent.setToolTipText("Percent");
        ButtonPercent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPercentActionPerformed(evt);
            }
        });

        FileMenu.setText("File");

        ButtonExport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.META_MASK));
        ButtonExport.setText("Export");
        ButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExportActionPerformed(evt);
            }
        });
        FileMenu.add(ButtonExport);

        ButtonRead.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.META_MASK));
        ButtonRead.setText("Read");
        ButtonRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReadActionPerformed(evt);
            }
        });
        FileMenu.add(ButtonRead);

        CalculatorMenuBar.add(FileMenu);

        ViewMenu.setText("View");

        ButtonBasic.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.META_MASK));
        ButtonBasic.setText("Basic");
        ButtonBasic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBasicActionPerformed(evt);
            }
        });
        ViewMenu.add(ButtonBasic);

        ButtonScientific.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.META_MASK));
        ButtonScientific.setText("Scientific");
        ButtonScientific.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonScientificActionPerformed(evt);
            }
        });
        ViewMenu.add(ButtonScientific);

        CalculatorMenuBar.add(ViewMenu);

        setJMenuBar(CalculatorMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonEquals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(InputOutputTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Button7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Button8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Button9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonDivide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Button4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Button5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Button6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonMultiply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(ButtonPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ButtonDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Button1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ButtonAddition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ButtonSubtraction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ButtonMemoryClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonPlusMinus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonMemoryStore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonMemoryRecall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonLog, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonSquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonSine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonSquareRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonHyperSine, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonHyperCosine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonNaturalLog, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonExponential, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonCosine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonCubeRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonHyperTangent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonFactorial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonTangent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonPi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InputOutputTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonPi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonPlusMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonSquare, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonExponential, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonMemoryStore, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonSquareRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonCubeRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonE, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonAddition, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonMemoryClear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonLog, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonNaturalLog, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonSubtraction, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonMemoryRecall, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonSine, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonCosine, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonTangent, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonHyperSine, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonHyperCosine, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonHyperTangent, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
        
    
    private void ButtonMemoryRecallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMemoryRecallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonMemoryRecallActionPerformed

    private void ButtonPlusMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPlusMinusActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator *= (-1);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonPlusMinusActionPerformed

    private void ButtonBasicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBasicActionPerformed
        // TODO add your handling code here:
        
        this.setResizable(true);
        this.setSize(basic);
        this.setResizable(false);

    }//GEN-LAST:event_ButtonBasicActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
        this.setResizable(true);
        this.setSize(basic);
        this.setResizable(false);
        
    }//GEN-LAST:event_formWindowActivated

    private void ButtonScientificActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonScientificActionPerformed
        // TODO add your handling code here:
        
        this.setResizable(true);
        this.setSize(scientific);
        this.setResizable(false);
        //InputOutputTextField.setSize(454, 27);
    }//GEN-LAST:event_ButtonScientificActionPerformed

    private void ButtonSineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSineActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.sin(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonSineActionPerformed

    private void ButtonHyperSineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonHyperSineActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.sinh(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonHyperSineActionPerformed

    private void ButtonCosineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCosineActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.cos(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonCosineActionPerformed

    private void ButtonHyperCosineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonHyperCosineActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.cosh(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonHyperCosineActionPerformed

    private void ButtonTangentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTangentActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.tan(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonTangentActionPerformed

    private void ButtonHyperTangentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonHyperTangentActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.tanh(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonHyperTangentActionPerformed

    private void ButtonPiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPiActionPerformed
        // TODO add your handling code here:
        
        double operator;
        operator = Math.PI;
        InputOutputTextField.setText(String.valueOf(operator));
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_ButtonPiActionPerformed

    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button6ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button6.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button6ActionPerformed

    private void InputOutputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputOutputTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputOutputTextFieldActionPerformed

    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button7.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button7ActionPerformed

    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button8.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button8ActionPerformed

    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button9.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button9ActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button4.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button4ActionPerformed

    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button5.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button5ActionPerformed

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button1.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button1ActionPerformed

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button2.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button3.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button3ActionPerformed

    private void Button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button0ActionPerformed
        // TODO add your handling code here:
        
        String cNum = InputOutputTextField.getText() + Button0.getText();
        InputOutputTextField.setText(cNum);
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_Button0ActionPerformed

    private void ButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClearActionPerformed
        // TODO add your handling code here:
        
        InputOutputTextField.setText("");
        ButtonClear.setEnabled(false);
    }//GEN-LAST:event_ButtonClearActionPerformed

    private void ButtonBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackspaceActionPerformed
        // TODO add your handling code here:
        
        String backspace = null;
        
        if(InputOutputTextField.getText().length() > 0)
        {
            StringBuilder builder = new StringBuilder(
                    InputOutputTextField.getText());
            builder.deleteCharAt(InputOutputTextField.getText().length() - 1);
            backspace = builder.toString();
            InputOutputTextField.setText(backspace);
        }
    }//GEN-LAST:event_ButtonBackspaceActionPerformed

    private void ButtonDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDecimalActionPerformed
        // TODO add your handling code here:
        
        if(!InputOutputTextField.getText().contains("."))
        {
            InputOutputTextField.setText(InputOutputTextField.getText()
                    + ButtonDecimal.getText());
        }
    }//GEN-LAST:event_ButtonDecimalActionPerformed

    private void ButtonSubtractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSubtractionActionPerformed
        // TODO add your handling code here:
        
        num1 = Double.parseDouble(InputOutputTextField.getText());
        InputOutputTextField.setText(null);
        operations = ("-");
    }//GEN-LAST:event_ButtonSubtractionActionPerformed

    private void ButtonEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEqualsActionPerformed
        // TODO add your handling code here:
        
        String result;
        
        num2 = Double.parseDouble(InputOutputTextField.getText());
        if(operations == "+")
        {
            answer = num1 + num2;
            result = String.format("%.2f", answer);
            InputOutputTextField.setText(result);
        }
        else if(operations == "-")
        {
            answer = num1 - num2;
            result = String.format("%.2f", answer);
            InputOutputTextField.setText(result);
        }
        else if(operations == "*")
        {
            answer = num1 * num2;
            result = String.format("%.2f", answer);
            InputOutputTextField.setText(result);
        }
        else if(operations == "/")
        {
            // determine if calculation is undefined
            if(num2 == 0)
            {
                InputOutputTextField.setText("Error");
            }
            else
            {
                answer = num1 / num2;
                result = String.format("%.2f", answer);
                InputOutputTextField.setText(result);
            }
        }
    }//GEN-LAST:event_ButtonEqualsActionPerformed

    private void ButtonPercentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPercentActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = (operator / 100);
        InputOutputTextField.setText(String.valueOf(operator));
        
    }//GEN-LAST:event_ButtonPercentActionPerformed

    private void ButtonSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSquareRootActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.sqrt(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonSquareRootActionPerformed

    private void ButtonLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLogActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.log(operator);
        InputOutputTextField.setText(String.valueOf(operator));
        
    }//GEN-LAST:event_ButtonLogActionPerformed

    private void ButtonEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEActionPerformed
        // TODO add your handling code here:
        
        double operator;
        operator = Math.E;
        InputOutputTextField.setText(String.valueOf(operator));
        ButtonClear.setEnabled(true);
    }//GEN-LAST:event_ButtonEActionPerformed

    private void ButtonCubeRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCubeRootActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.cbrt(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonCubeRootActionPerformed

    private void ButtonSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSquareActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = (operator * operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonSquareActionPerformed

    private void ButtonExponentialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExponentialActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.pow(operator, operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonExponentialActionPerformed

    private void ButtonNaturalLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNaturalLogActionPerformed
        // TODO add your handling code here:
        
        double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText()));
        operator = Math.log1p(operator);
        InputOutputTextField.setText(String.valueOf(operator));
    }//GEN-LAST:event_ButtonNaturalLogActionPerformed

    private void ButtonFactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonFactorialActionPerformed
        // TODO add your handling code here:
        
        if(InputOutputTextField.getText().contains("."))
        {
            InputOutputTextField.setText("Error");
        }
        else
        {
            double operator = Double.parseDouble(String.valueOf(
                InputOutputTextField.getText())); 
            BigInteger k = new BigDecimal(operator).toBigInteger();
            BigInteger facNum = factorial(k);
            InputOutputTextField.setText(String.valueOf(facNum));
        }
        
    }//GEN-LAST:event_ButtonFactorialActionPerformed

    private void InputOutputTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputOutputTextFieldKeyTyped
        // TODO add your handling code here:
        
        //prevent user from inputting characters
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| (c == KeyEvent.VK_BACKSPACE)
                || (c == KeyEvent.VK_DELETE)))
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_InputOutputTextFieldKeyTyped

    private void ButtonAdditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAdditionActionPerformed
        // TODO add your handling code here:
        
        num1 = Double.parseDouble(InputOutputTextField.getText());
        InputOutputTextField.setText(null);
        operations = ("+");
    }//GEN-LAST:event_ButtonAdditionActionPerformed

    private void ButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMultiplyActionPerformed
        // TODO add your handling code here:
        
        num1 = Double.parseDouble(InputOutputTextField.getText());
        InputOutputTextField.setText(null);
        operations = ("*");
    }//GEN-LAST:event_ButtonMultiplyActionPerformed

    private void ButtonDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDivideActionPerformed
        // TODO add your handling code here:
        
        num1 = Double.parseDouble(InputOutputTextField.getText());
        InputOutputTextField.setText(null);
        operations = ("/");
        
    }//GEN-LAST:event_ButtonDivideActionPerformed

    private void Button7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Button7KeyPressed
        // TODO add your handling code here:
        
        if (evt.getKeyCode() == KeyEvent.VK_7)
        {
            Button7.doClick();
        }
    }//GEN-LAST:event_Button7KeyPressed

    private void ButtonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExportActionPerformed
        // TODO add your handling code here:
        
        savedCalculation = InputOutputTextField.getText();
        
        //call method
        OutputToFile();
    }//GEN-LAST:event_ButtonExportActionPerformed

    private void ButtonReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReadActionPerformed
        // TODO add your handling code here:
        
        //call method
        inputFile();
        
        
    }//GEN-LAST:event_ButtonReadActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button0;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button6;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JButton ButtonAddition;
    private javax.swing.JButton ButtonBackspace;
    private javax.swing.JMenuItem ButtonBasic;
    private javax.swing.JButton ButtonClear;
    private javax.swing.JButton ButtonCosine;
    private javax.swing.JButton ButtonCubeRoot;
    private javax.swing.JButton ButtonDecimal;
    private javax.swing.JButton ButtonDivide;
    private javax.swing.JButton ButtonE;
    private javax.swing.JButton ButtonEquals;
    private javax.swing.JButton ButtonExponential;
    private javax.swing.JMenuItem ButtonExport;
    private javax.swing.JButton ButtonFactorial;
    private javax.swing.JButton ButtonHyperCosine;
    private javax.swing.JButton ButtonHyperSine;
    private javax.swing.JButton ButtonHyperTangent;
    private javax.swing.JButton ButtonLog;
    private javax.swing.JButton ButtonMemoryClear;
    private javax.swing.JButton ButtonMemoryRecall;
    private javax.swing.JButton ButtonMemoryStore;
    private javax.swing.JButton ButtonMultiply;
    private javax.swing.JButton ButtonNaturalLog;
    private javax.swing.JButton ButtonPercent;
    private javax.swing.JButton ButtonPi;
    private javax.swing.JButton ButtonPlusMinus;
    private javax.swing.JMenuItem ButtonRead;
    private javax.swing.JMenuItem ButtonScientific;
    private javax.swing.JButton ButtonSine;
    private javax.swing.JButton ButtonSquare;
    private javax.swing.JButton ButtonSquareRoot;
    private javax.swing.JButton ButtonSubtraction;
    private javax.swing.JButton ButtonTangent;
    private javax.swing.JMenuBar CalculatorMenuBar;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JTextField InputOutputTextField;
    private javax.swing.JMenu ViewMenu;
    // End of variables declaration//GEN-END:variables
}
